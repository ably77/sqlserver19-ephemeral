---
apiVersion: v1
data:
  SA_PASSWORD: U3FsMjAxOWlzZmFzdA==
kind: Secret
metadata:
  name: mssql
  namespace: mssql
type: Opaque
---
apiVersion: build.openshift.io/v1
kind: BuildConfig
metadata:
  name: sqlserver-ephemeral
  namespace: mssql
  labels:
    name: sqlserver-ephemeral
spec:
  triggers:
    - type: GitHub
      github:
        secret: secret101
    - type: ImageChange
      imageChange: {}
    - type: ConfigChange
  source:
    type: Git
    git:
      uri: 'https://github.com/ably77/sqlserver19-ephemeral.git'
  strategy:
    type: Docker
  output:
    to:
      kind: ImageStreamTag
      name: 'sqlserver-ephemeral:latest'
---
kind: ImageStream
apiVersion: image.openshift.io/v1
metadata:
  annotations:
    openshift.io/generated-by: OpenShiftNewApp
  name: sqlserver-ephemeral
  namespace: mssql
  labels:
    app: sqlserver-ephemeral
spec:
  lookupPolicy:
    local: true
---
kind: DeploymentConfig
apiVersion: apps.openshift.io/v1
metadata:
  name: sqlserver-ephemeral
  annotations:
    openshift.io/generated-by: OpenShiftNewApp
  namespace: mssql
  labels:
    app: sqlserver-ephemeral
spec:
  strategy:
    type: Rolling
    rollingParams:
      updatePeriodSeconds: 1
      intervalSeconds: 1
      timeoutSeconds: 600
      maxUnavailable: 25%
      maxSurge: 25%
    resources: {}
    activeDeadlineSeconds: 21600
  triggers:
    - type: ConfigChange
    - type: ImageChange
      imageChangeParams:
        automatic: true
        containerNames:
          - sqlserver-ephemeral
        from:
          kind: ImageStreamTag
          namespace: mssql
          name: 'sqlserver-ephemeral:latest'
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    app: sqlserver-ephemeral
    deploymentconfig: sqlserver-ephemeral
  template:
    metadata:
      labels:
        app: sqlserver-ephemeral
        deploymentconfig: sqlserver-ephemeral
      annotations:
        openshift.io/generated-by: OpenShiftNewApp
    spec:
      #serviceAccountName: mssql-sa
      containers:
        - name: sqlserver-ephemeral
          ports:
            - containerPort: 1433
              protocol: TCP
          imagePullPolicy: Always
          # other options
          #securityContext:
            #runAsUser: 1000850000
            #runAsUser: 10001
      #securityContext:
        #fsGroup: 10001
      restartPolicy: Always
      terminationGracePeriodSeconds: 30